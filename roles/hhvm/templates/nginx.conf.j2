worker_processes  2;

user www-data root; # for systems with a "nogroup"

pid /run/nginx.pid;
error_log /var/log/nginx/error.log;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex on; # "on" if nginx worker_processes > 1
  use epoll; # enable for Linux 2.6+
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  client_max_body_size 100m;

  log_format nginx '$remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent $request_time '
                 '"$http_referer" "$http_user_agent"';

  access_log /var/log/nginx/access.log nginx;

  sendfile on;

  tcp_nopush on;
  tcp_nodelay on;

  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  fastcgi_buffers 8 16k;
  fastcgi_buffer_size 32k;
  fastcgi_connect_timeout 600;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;

  server {
    listen      80;
    server_name	127.0.0.1;
    rewrite     ^   https://$server_name$request_uri? permanent;
  }

  server {
    listen 443 ssl;
    charset utf-8;
    server_name 127.0.0.1;
    error_log /var/log/nginx/d.nginx.log debug;

    add_header Strict-Transport-Security "max-age=31557600";
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Xss-Protection "1";
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-eval' 'unsafe-inline' https:; connect-src 'self'; img-src 'self' data: https:; style-src 'self' 'unsafe-inline' https:; font-src 'self' data: https:; sandbox allow-forms allow-scripts";

    ssl  on;
    ssl_certificate /etc/ssl/keys/ssl.crt;
    ssl_certificate_key /etc/ssl/keys/ssl.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers On;
    ssl_session_cache shared:SSL:128m;
    ssl_stapling on;
    ssl_stapling_verify on;

    resolver 8.8.8.8;
    root              /var/www/html;
    index             index.php;

    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    location / {
      # This is cool because no php is touched for static content.
      # include the "?$args" part so non-default permalinks doesn't break when using query string
      try_files $uri $uri/ /index.php?$args;
      }

    location /hhvm/ {
      rewrite /hhvm/(.*)$ /$1 break;
      # pass to hhvm adminserver
      fastcgi_pass 127.0.0.1:9001;
      include fastcgi_params;
    }

    location ~ \.(hh|php)$ {
      fastcgi_keep_conn on;
      fastcgi_pass   unix:/var/run/hhvm/hhvm.sock;
      fastcgi_index  index.php;
      fastcgi_param  SCRIPT_FILENAME /var/www/html/$fastcgi_script_name;
      include        fastcgi_params;
      fastcgi_intercept_errors on;
    }


    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
      expires max;
      log_not_found off;
    }

    location /nginx_status {
        stub_status on;
        access_log off;
    }

  }
}
